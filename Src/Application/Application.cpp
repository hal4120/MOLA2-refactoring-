#include "Application.h"

#include <DxLib.h>

#include"../Manager/FPS/FPS.h"
#include"../Manager/Input/InputManager.h"
#include"../Manager/Input/KeyManager.h"
#include"../Scene/SceneManager/SceneManager.h"
#include"../Manager/Score/Score.h"
#include"../Manager/Sound/SoundManager.h"

Application* Application::instance_ = nullptr;

// コンストラクタ
Application::Application(void)
{
	gameEnd_ = false;
	isInitFail_ = false;
	isReleaseFail_ = false;
	fps_ = nullptr;
}

// デストラクタ
Application::~Application(void)
{
}

// 初期化
void Application::Init(void)
{
	// アプリケーションの初期設定
	SetWindowText("MOLA2");

	// ウィンドウ関連
	SetGraphMode(SCREEN_SIZE_X, SCREEN_SIZE_Y, 32);	// サイズ変更
	ChangeWindowMode(false);	// false = フルスクリーン

	// DxLibの初期化
	isInitFail_ = false;
	if (DxLib_Init() == -1)
	{
		// 初期化失敗
		isInitFail_ = true;
		return;
	}

	// 描画先画面を裏にする
	SetDrawScreen(DX_SCREEN_BACK);

	// キー制御初期化
	SetUseDirectInputFlag(true);
	InputManager::CreateInstance();
	InputManager::GetInstance().Init();
	KEY::CreateIns();

	// スコア管理クラスの生成とロード
	Score::CreateInstance();

	// 音声管理クラスの生成とロード
	Smng::CreateIns();
	// いろんな場所で使う音をロード
	Smng::GetIns().Load(SOUND::SELECT);
	Smng::GetIns().Load(SOUND::BUTTON);

	// シーン管理初期化
	SceneManager::CreateInstance();
	SceneManager::GetInstance().Init();

	// FPS初期化
	fps_ = new FPS;
	fps_->Init();
}

// ゲームループ
void Application::Run(void)
{
	// ゲームループ
	while (ProcessMessage() == 0 && !gameEnd_)
	{
		// フレームレート更新
		// 1/60秒経過していないなら再ループさせる
		if (!fps_->UpdateFrameRate()) continue;

		InputManager::GetInstance().Update();	// 入力制御更新
		KEY::GetIns().Update();
		SceneManager::GetInstance().Update();	// シーン管理更新
		fps_->CalcFrameRate();					// フレームレート計算

		ClearDrawScreen();

		SceneManager::GetInstance().Draw();		// シーン管理描画
		fps_->DrawFrameRate();					// フレームレート描画

		ScreenFlip();
	}
}

// 解放
void Application::Release(void)
{
	// 入力制御削除
	InputManager::GetInstance().Destroy();
	KEY::DeleteIns();

	// スコア管理クラスのセーブと削除
	Score::DeleteIns();

	// 音声管理クラスの削除
	Smng::DeleteIns();
							   
	// シーン管理解放・削除	
	SceneManager::GetInstance().Release();
	SceneManager::DeleteInstance();

	// フレームレート解放
	delete fps_;

	// DxLib終了
	if (DxLib_End() == -1)
	{
		isReleaseFail_ = true;
	}
}
